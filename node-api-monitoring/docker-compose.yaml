version: '3'
services:
  # Elasticsearch service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  # Kibana service for visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - elastic

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.92.0
    container_name: otel-collector
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # Health check extension
      - "55678:55678" # OpenCensus receiver
      - "55679:55679" # zpages extension
    depends_on:
      - elasticsearch
    networks:
      - elastic
      
  # Node.js application
  app:
    image: node:20
    container_name: node-app
    working_dir: /app
    volumes:
      - .:/app
    command: bash -c "npm install && node index.js"
    ports:
      - "8080:8080"
    depends_on:
      - otel-collector
    networks:
      - elastic
      
  # Load-tester service
  load-tester:
    image: node:20
    container_name: load-tester
    working_dir: /app
    volumes:
      - .:/app
    command: bash -c "npm install && node load-tester.js"
    depends_on:
      - app
    networks:
      - elastic
    # Start this manually when needed:
    # docker-compose up load-tester
    profiles:
      - tools

volumes:
  elasticsearch-data:
    driver: local

networks:
  elastic:
    driver: bridge 